software,file,line,coverage,original,mutated,task,Status,ExitCode_blank,ExitCode,job,Elapsed,hours,megabytes,State_batch,State_blank,State_extern,ExitCode_batch,ExitCode_extern,passed
data.table,as.data.table.R,10,3,"as.data.table(as.data.frame(x, ...), ...) # we cannot assume as.data.frame will do copy, thus setDT changed to as.data.table #3230","as.data.table(as.data.frame( ...,x), ...) # we cannot assume as.data.frame will do copy, thus setDT changed to as.data.table #3230",22,1 NOTE,0:0,NOTE:installed package size,9789630,00:03:10,0.0527777777777778,340.578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,144,84,"xi = x[[i]] = as.data.table(xi, keep.rownames=keep.rownames)  # we will never allow a matrix to be a column; always unpack the columns","xi = x[[i]] = as.data.table( keep.rownames=keep.rownames,xi)  # we will never allow a matrix to be a column; always unpack the columns",471,1 NOTE,0:0,NOTE:installed package size,9789630,00:03:37,0.0602777777777778,998.6796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,155,1238,"empty_atomic = TRUE  # any empty atomic (not empty list()) should result in nrows=0L, #3727","empty_atomic = TRUE  # any empty atomic (not empty list()) should result in nrows=0L, #3727
break;",501,1 NOTE,0:0,NOTE:installed package size,9789630,00:03:07,0.0519444444444445,288.5625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,180,19579,if (eachnrow[i]>1L && nrow%%eachnrow[i]!=0L)   # in future: eachnrow[i]!=nrow,if (eachnrow[i]>1L && nrow%%eachnrow[i]>0L)   # in future: eachnrow[i]!=nrow,578,1 NOTE,0:0,NOTE:installed package size,9789630,00:02:29,0.0413888888888889,989.625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,180,19579,if (eachnrow[i]>1L && nrow%%eachnrow[i]!=0L)   # in future: eachnrow[i]!=nrow,if (eachnrow[i]>=1L && nrow%%eachnrow[i]!=0L)   # in future: eachnrow[i]!=nrow,582,1 NOTE,0:0,NOTE:installed package size,9789630,00:02:44,0.0455555555555556,602.3515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,180,19579,if (eachnrow[i]>1L && nrow%%eachnrow[i]!=0L)   # in future: eachnrow[i]!=nrow,if (eachnrow[i]>0L && nrow%%eachnrow[i]!=0L)   # in future: eachnrow[i]!=nrow,585,1 NOTE,0:0,NOTE:installed package size,9789630,00:03:48,0.0633333333333333,360.765625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,183,316,"prefix = if (!isFALSE(.named[i]) && isTRUE(nchar(names(x)[i])>0L)) paste0(names(x)[i],""""."""") else """"""""  # test 2058.12","prefix = if (!isFALSE(.named[i]) && isTRUE(nchar(names(x)[i])!=0L)) paste0(names(x)[i],""""."""") else """"""""  # test 2058.12",604,1 NOTE,0:0,NOTE:installed package size,9789630,00:02:40,0.0444444444444444,728.2421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,191,19263,"vnames[k] = if (length(nm) && !is.na(nm) && nm!="""""""") nm else paste0(""""V"""",i-n_null)  # i (not k) tested by 2058.14 to be the same as the past for now","vnames[k] = if (length(nm) && !is.na(nm) && nm>"""""""") nm else paste0(""""V"""",i-n_null)  # i (not k) tested by 2058.14 to be the same as the past for now",652,1 NOTE,0:0,NOTE:installed package size,9789630,00:02:50,0.0472222222222222,562.00390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,as.data.table.R,199,5567,"setDT(ans, key=key) # copy ensured above; also, setDT handles naming","setDT( key=key,ans) # copy ensured above; also, setDT handles naming",699,1 NOTE,0:0,NOTE:installed package size,9789630,00:02:44,0.0455555555555556,366.015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,between.R,80,5,"0, c(FALSE, TRUE), 0L, """"all"""", ops, verbose) # fix for #1819, turn on verbose messages","0, c( TRUE,FALSE), 0L, """"all"""", ops, verbose) # fix for #1819, turn on verbose messages",395,1 NOTE,0:0,NOTE:installed package size,9789637,00:03:06,0.0516666666666667,400.6640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,55,264,"set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values","set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=-1L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values",162,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:11,0.0530555555555556,696.51171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,55,264,"set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values","set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values
break;",163,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:11,0.0530555555555556,772.82421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,55,264,"set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values","set(i, j=ic, value=chmatch(levels(i[[ic]]), nomatch=0L, levels(x[[xc]]))[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values",166,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:09,0.0525,713.6484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,55,264,"set(i, j=ic, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values","set( j=ic,i, value=chmatch(levels(i[[ic]]), levels(x[[xc]]), nomatch=0L)[i[[ic]]])  # nomatch=0L otherwise a level that is missing would match to NA values",167,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:09,0.0525,772.8125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,61,3,"set(callersi, j=ic, value=val)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581","set(callersi, j=ic, value=val)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581
break;",198,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:59,0.0663888888888889,691.85546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,61,3,"set(callersi, j=ic, value=val)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581","set(callersi, value=val, j=ic)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581",200,1 NOTE,0:0,NOTE:installed package size,9789646,00:04:18,0.0716666666666667,842.98046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,61,3,"set(callersi, j=ic, value=val)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581","set( j=ic,callersi, value=val)  # factor in i joining to character in x will return character and not keep x's factor; e.g. for antaresRead #3581",201,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:41,0.0613888888888889,290.58984375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,94,5,"if (xclass==""""integer64"""") { w=i; wc=ic; wclass=iclass; } else { w=x; wc=xc; wclass=xclass; nm=rev(nm) }  # w is which to coerce","if (xclass>=""""integer64"""") { w=i; wc=ic; wclass=iclass; } else { w=x; wc=xc; wclass=xclass; nm=rev(nm) }  # w is which to coerce",386,1 NOTE,0:0,NOTE:installed package size,9789646,00:04:02,0.0672222222222222,290.16015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,109,660,"set(callersi, j=ic, value=val)       # change the shallow copy of i up in [.data.table to reflect in the result, too.","set(callersi, value=val, j=ic)       # change the shallow copy of i up in [.data.table to reflect in the result, too.",479,1 NOTE,0:0,NOTE:installed package size,9789646,00:02:46,0.0461111111111111,982.48046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,109,660,"set(callersi, j=ic, value=val)       # change the shallow copy of i up in [.data.table to reflect in the result, too.","set( j=ic,callersi, value=val)       # change the shallow copy of i up in [.data.table to reflect in the result, too.",481,1 NOTE,0:0,NOTE:installed package size,9789646,00:02:45,0.0458333333333333,601.00390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,126,3069,"non_equi = which.first(ops != 1L) # 1 is """"=="""" operator","non_equi = which.first(ops > 1L) # 1 is """"=="""" operator",524,1 NOTE,0:0,NOTE:installed package size,9789646,00:02:52,0.0477777777777778,734.67578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,172,636,if (nqmaxgrp > 1L) { # got some non-equi join work to do,if (nqmaxgrp >= 1L) { # got some non-equi join work to do,685,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:06,0.0516666666666667,734.62890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,172,636,if (nqmaxgrp > 1L) { # got some non-equi join work to do,if (nqmaxgrp != 1L) { # got some non-equi join work to do,687,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:06,0.0516666666666667,810.9609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,172,636,if (nqmaxgrp > 1L) { # got some non-equi join work to do,if (nqmaxgrp > 0L) { # got some non-equi join work to do,688,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:06,0.0516666666666667,848.8984375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,bmerge.R,172,636,if (nqmaxgrp > 1L) { # got some non-equi join work to do,if (nqmaxgrp > -1L) { # got some non-equi join work to do,689,1 NOTE,0:0,NOTE:installed package size,9789646,00:03:06,0.0516666666666667,803.01953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,29,51754,if (isTRUE(env$.datatable.aware)) {  # dtplyr 184,"if (isTRUE(env$.datatable.aware)) {  # dtplyr 184
break;",21,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9789650,00:03:28,0.0577777777777778,459.703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,29,51754,if (isTRUE(env$.datatable.aware)) {  # dtplyr 184,"if (isTRUE(env$.datatable.aware)) {  # dtplyr 184
continue;",22,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9789650,00:03:28,0.0577777777777778,459.859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,39,18323,"""""data.table"""" %chin% names(getNamespaceImports(ns)) ||   # most common and recommended cases first for speed","""""data.table"""" %chin% names(getNamespaceImports(ns)) &&   # most common and recommended cases first for speed",47,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:37,0.0602777777777778,601.03125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,39,18323,"""""data.table"""" %chin% names(getNamespaceImports(ns)) ||   # most common and recommended cases first for speed",""""""""" %chin% names(getNamespaceImports(ns)) ||   # most common and recommended cases first for speed",50,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:26,0.0572222222222222,803.19140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=8L && sc[[length(sc)/7L]] %iscall% 'example')) ) || # 'example' for #2972,70,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:53,0.0647222222222222,829.91015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())==8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,71,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:52,0.0644444444444445,829.91015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())!=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,72,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:53,0.0647222222222222,961.9921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())<8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,73,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:53,0.0647222222222222,953.55078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,74,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:27,0.0575,429.453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())<=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,80,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:29,0.0580555555555556,290.51171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=0L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,82,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:59,0.0663888888888889,1121.90234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=8L && sc[[length(sc)-0L]] %iscall% 'example')) ) || # 'example' for #2972,83,1 NOTE,0:0,NOTE:installed package size,9789650,00:04:00,0.0666666666666667,1121.7109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=1L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,84,1 NOTE,0:0,NOTE:installed package size,9789650,00:04:00,0.0666666666666667,1122.02734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=8L && sc[[length(sc)-1L]] %iscall% 'example')) ) || # 'example' for #2972,85,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:59,0.0663888888888889,1122.328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,42,18323,(length(sc<-sys.calls())>=8L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,(length(sc<-sys.calls())>=-1L && sc[[length(sc)-7L]] %iscall% 'example')) ) || # 'example' for #2972,86,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:57,0.0658333333333333,1122.27734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,43,18323,"(nsname==""""base"""" && all(c(""""FUN"""", """"X"""") %chin% ls(parent.frame(n)))) || # lapply","(nsname<=""""base"""" && all(c(""""FUN"""", """"X"""") %chin% ls(parent.frame(n)))) || # lapply",93,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:48,0.0633333333333333,508.765625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,43,18323,"(nsname==""""base"""" && all(c(""""FUN"""", """"X"""") %chin% ls(parent.frame(n)))) || # lapply","(nsname>=""""base"""" && all(c(""""FUN"""", """"X"""") %chin% ls(parent.frame(n)))) || # lapply",94,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:30,0.0583333333333333,431.48828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,43,18323,"(nsname==""""base"""" && all(c(""""FUN"""", """"X"""") %chin% ls(parent.frame(n)))) || # lapply","(nsname==""""base"""" && all(c( """"X"""",""""FUN"""") %chin% ls(parent.frame(n)))) || # lapply",103,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:45,0.0625,341.82421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,46,18323,"isTRUE(ns$.datatable.aware) ||  # As of Sep 2018: RCAS, caretEnsemble, dtplyr, rstanarm, rbokeh, CEMiTool, rqdatatable, RImmPort, BPRMeth, rlist","isTRUE(ns$.datatable.aware) &&  # As of Sep 2018: RCAS, caretEnsemble, dtplyr, rstanarm, rbokeh, CEMiTool, rqdatatable, RImmPort, BPRMeth, rlist",132,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:47,0.0463888888888889,778.69921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",138,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:51,0.0475,829.90625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",nsname,paste(""""package"""",sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",139,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:52,0.0477777777777778,829.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",sep="""":"""",nsname),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",140,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:52,0.0477777777777778,829.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,inherits=FALSE,sep="""":"""")),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",141,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:52,0.0477777777777778,914.21875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),ns,error=function(e)FALSE)  # both ns$.Depends and get(.Depends) are not sufficient",142,1 NOTE,0:0,NOTE:installed package size,9789650,00:02:52,0.0477777777777778,905.0859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(paste(""""package"""",""""data.table"""" %chin% get("""".Depends"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",143,"1 WARNING, 2 NOTEs",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size, NOTE:R code for possible problems",9789650,00:02:52,0.0477777777777778,917.1484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get(paste(""""package"""","""".Depends"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",144,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:33,0.0591666666666667,288.4921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(nsname,""""package"""",sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient",145,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:34,0.0594444444444445,286.4609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,cedta.R,47,18323,"tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(e)FALSE)  # both ns$.Depends and get(.Depends,ns) are not sufficient","tryCatch(""""data.table"""" %chin% get("""".Depends"""",paste(""""package"""",nsname,sep="""":""""),inherits=FALSE),error=function(ns,e)FALSE)  # both ns$.Depends and get(.Depends) are not sufficient",146,1 NOTE,0:0,NOTE:installed package size,9789650,00:03:34,0.0594444444444445,292.15234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,31,262,"is.ff = function(x) inherits(x, """"ff"""")  # define this in data.table so that we don't have to require(ff), but if user is using ff we'd like it to work","is.ff = function(x) inherits(x, """""""")  # define this in data.table so that we don't have to require(ff), but if user is using ff we'd like it to work",49,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:45,0.0625,843.41796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,60,52,if (length(x)==1L && (is.null(x[[1L]]) || (is.list(x[[1L]]) && length(x[[1L]])==0L))) return( null.data.table() ) #48,if (length(x)<=1L && (is.null(x[[1L]]) || (is.list(x[[1L]]) && length(x[[1L]])==0L))) return( null.data.table() ) #48,98,1 NOTE,0:0,NOTE:installed package size,9793215,00:12:39,0.210833333333333,1241.76953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,60,52,if (length(x)==1L && (is.null(x[[1L]]) || (is.list(x[[1L]]) && length(x[[1L]])==0L))) return( null.data.table() ) #48,if (length(x)==1L && (is.null(x[[1L]]) || (is.list(x[[1L]]) && length(x[[1L]])<=0L))) return( null.data.table() ) #48,99,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:38,0.0605555555555556,290.73828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,61,4160,"ans = as.data.table.list(x, keep.rownames=keep.rownames, check.names=check.names, .named=nd$.named)  # see comments inside as.data.table.list re copies","ans = as.data.table.list(x, check.names=check.names, keep.rownames=keep.rownames, .named=nd$.named)  # see comments inside as.data.table.list re copies",123,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:20,0.0555555555555556,360.94140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,61,4160,"ans = as.data.table.list(x, keep.rownames=keep.rownames, check.names=check.names, .named=nd$.named)  # see comments inside as.data.table.list re copies","ans = as.data.table.list(x, keep.rownames=keep.rownames, .named=nd$.named, check.names=check.names)  # see comments inside as.data.table.list re copies",124,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:34,0.0594444444444445,287.8125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,61,4160,"ans = as.data.table.list(x, keep.rownames=keep.rownames, check.names=check.names, .named=nd$.named)  # see comments inside as.data.table.list re copies","ans = as.data.table.list( keep.rownames=keep.rownames,x, check.names=check.names, .named=nd$.named)  # see comments inside as.data.table.list re copies",125,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:41,0.0613888888888889,291.62109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,149,20,"ans = if (Nargs<3L) { `[.data.frame`(x,i) }  # drop ignored anyway by DF[i]","ans = if (Nargs!=3L) { `[.data.frame`(x,i) }  # drop ignored anyway by DF[i]",412,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:53,0.0647222222222222,766.6875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,153,36,"if (!missing(i) && is.data.table(ans)) setkey(ans, NULL)  # drops index too; tested by plyr::arrange test in other.Rraw","if (!missing(i) || is.data.table(ans)) setkey(ans, NULL)  # drops index too; tested by plyr::arrange test in other.Rraw",427,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:20,0.0555555555555556,282.51171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,153,36,"if (!missing(i) && is.data.table(ans)) setkey(ans, NULL)  # drops index too; tested by plyr::arrange test in other.Rraw","if (missing(i) && is.data.table(ans)) setkey(ans, NULL)  # drops index too; tested by plyr::arrange test in other.Rraw",428,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:29,0.0580555555555556,423.234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,185,50122,bynull = !missingby && is.null(by) #3530,bynull = missingby && is.null(by) #3530,536,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:27,0.0575,421.35546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,203,1266,"tryCatch(!is.symbol(tt_isub), error=function(e)TRUE) &&   # a symbol that inherits missingness from caller isn't missing for our purpose; test 1974","tryCatch(is.symbol(tt_isub), error=function(e)TRUE) &&   # a symbol that inherits missingness from caller isn't missing for our purpose; test 1974",592,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:06,0.0516666666666667,290.33203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,224,48846,"nomatch0 = identical(nomatch,0) || identical(nomatch,0L) || identical(nomatch, FALSE)  # for warning with row-numbers in i; #4353","nomatch0 = identical(0,nomatch) || identical(nomatch,0L) || identical(nomatch, FALSE)  # for warning with row-numbers in i; #4353",702,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:04,0.0511111111111111,252.046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,224,48846,"nomatch0 = identical(nomatch,0) || identical(nomatch,0L) || identical(nomatch, FALSE)  # for warning with row-numbers in i; #4353","nomatch0 = identical(nomatch,0) || identical(0L,nomatch) || identical(nomatch, FALSE)  # for warning with row-numbers in i; #4353",703,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:04,0.0511111111111111,246.21875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,224,48846,"nomatch0 = identical(nomatch,0) || identical(nomatch,0L) || identical(nomatch, FALSE)  # for warning with row-numbers in i; #4353","nomatch0 = identical(nomatch,0) || identical(nomatch,0L) || identical( FALSE,nomatch)  # for warning with row-numbers in i; #4353",704,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:57,0.0491666666666667,287.0859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,294,7,"jsub = jsub[[2L]]  # to allow {} wrapping of := e.g. [,{`:=`(...)},] [#376]","jsub = jsub[[-1L]]  # to allow {} wrapping of := e.g. [,{`:=`(...)},] [#376]",939,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:38,0.0605555555555556,764.70703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,305,1384,"jsub = eval(jsub[[2L]], parent.frame(), parent.frame())  # this evals the symbol to return the dynamic expression","jsub = eval(jsub[[-1L]], parent.frame(), parent.frame())  # this evals the symbol to return the dynamic expression",986,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:32,0.0588888888888889,765,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,431,4,if (is.numeric(i) && ncol(i)==1L) { # #826 - subset DT on single integer vector stored as matrix,if (is.numeric(i) && ncol(i)<=1L) { # #826 - subset DT on single integer vector stored as matrix,1320,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:28,0.0577777777777778,362.17578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,434,1,"stopf(""""i is invalid type (matrix). Perhaps in future a 2 column matrix could return a list of elements of DT (in the spirit of A[B] in FAQ 2.14). Please report to data.table issue tracker if you'd like this, or add your comments to FR #657."""")","stopf(""""i is invalid type (matrix). Perhaps in future a 2 column matrix could return a list of elements of DT (in the spirit of A[B] in FAQ 2.14). Please report to data.table issue tracker if you'd like this, or add your comments to FR #657."""")
break;",1333,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9793215,00:03:22,0.0561111111111111,407.3125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,434,1,"stopf(""""i is invalid type (matrix). Perhaps in future a 2 column matrix could return a list of elements of DT (in the spirit of A[B] in FAQ 2.14). Please report to data.table issue tracker if you'd like this, or add your comments to FR #657."""")","stopf(""""i is invalid type (matrix). Perhaps in future a 2 column matrix could return a list of elements of DT (in the spirit of A[B] in FAQ 2.14). Please report to data.table issue tracker if you'd like this, or add your comments to FR #657."""")
continue;",1334,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:03:22,0.0561111111111111,355.80859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,448,3,"else if (identical(class(i),""""data.frame"""")) { i = as.data.table(i) }   # TO DO: avoid these as.data.table() and use a flag instead","else if (identical(class(i),"""""""")) { i = as.data.table(i) }   # TO DO: avoid these as.data.table() and use a flag instead",1379,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:47,0.0630555555555556,288.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,448,3,"else if (identical(class(i),""""data.frame"""")) { i = as.data.table(i) }   # TO DO: avoid these as.data.table() and use a flag instead","else if (identical(""""data.frame"""",class(i))) { i = as.data.table(i) }   # TO DO: avoid these as.data.table() and use a flag instead",1380,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:47,0.0630555555555556,288.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,480,2286,"if (any(ops > 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")","if (any(ops >= 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")",1469,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:33,0.0591666666666667,307.578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,480,2286,"if (any(ops > 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")","if (any(ops != 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")",1471,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:36,0.06,1011.078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,480,2286,"if (any(ops > 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")","if (any(ops > 0L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")",1472,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.87890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,480,2286,"if (any(ops > 1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")","if (any(ops > -1L)) { ## fix for #4489;  ops = c(""""=="""", """"<="""", """"<"""", """">="""", """">"""", """"!="""")",1473,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.87890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,497,2891,"if (notjoin && (byjoin || mult != """"all"""")) { # mult != """"all"""" needed for #1571","if (notjoin && (byjoin || mult > """"all"""")) { # mult != """"all"""" needed for #1571",1521,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:25,0.0569444444444445,993.921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,515,2847,allGrp1 = all(ops==1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,allGrp1 = all(ops<=1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,1597,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:19,0.0552777777777778,288.70703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,515,2847,allGrp1 = all(ops==1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,allGrp1 = all(ops<1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,1600,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:57,0.0491666666666667,283.79296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,515,2847,allGrp1 = all(ops==1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,allGrp1 = all(ops==0L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,1602,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:45,0.0458333333333333,963.5390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,515,2847,allGrp1 = all(ops==1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,allGrp1 = all(ops==-1L) # was previously 'ans$allGrp1'. Fixing #1991. TODO: Revisit about allGrp1 possibility for speedups in certain cases when I find some time.,1604,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:58,0.0494444444444445,283.77734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,553,13,allLen1 = FALSE # TODO; should this always be FALSE?,allLen0 = FALSE # TODO; should this always be FALSE?,1737,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:36,0.06,288.26171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,560,439,"if (is.null(nomatch)) irows = irows[len__>0L]  # 0s are len 0, so this removes -1 irows","if (is.null(nomatch)) irows = irows[len__>=0L]  # 0s are len 0, so this removes -1 irows",1759,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,503.74609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,560,439,"if (is.null(nomatch)) irows = irows[len__>0L]  # 0s are len 0, so this removes -1 irows","if (is.null(nomatch)) irows = irows[len__!=0L]  # 0s are len 0, so this removes -1 irows",1761,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,764.69921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,560,439,"if (is.null(nomatch)) irows = irows[len__>0L]  # 0s are len 0, so this removes -1 irows","if (is.null(nomatch)) irows = irows[len__>-1L]  # 0s are len 0, so this removes -1 irows",1763,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,747.28515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,567,1507,"if (mult==""""all"""" && !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.","if (mult<=""""all"""" && !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.",1776,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,567,1507,"if (mult==""""all"""" && !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.","if (mult>=""""all"""" && !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.",1777,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:35,0.0597222222222222,291.0390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,567,1507,"if (mult==""""all"""" && !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.","if (mult==""""all"""" || !allGrp1) { # following #1991 fix, !allGrp1 will always be TRUE. TODO: revisit.",1784,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:29,0.0580555555555556,288.70703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,582,538,"irows = fsort(irows, internal=TRUE) ## internally, fsort on integer falls back to forderv","irows = fsort( internal=TRUE,irows) ## internally, fsort on integer falls back to forderv",1836,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:03,0.0508333333333333,737.6640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,608,1055,if (length(i)==1L  # to avoid unname copy when length(i)==nrow (normal case we don't want to slow down),if (length(i)<=1L  # to avoid unname copy when length(i)==nrow (normal case we don't want to slow down),1892,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:09,0.0525,429.48828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,608,1055,if (length(i)==1L  # to avoid unname copy when length(i)==nrow (normal case we don't want to slow down),if (length(i)>=1L  # to avoid unname copy when length(i)==nrow (normal case we don't want to slow down),1893,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:09,0.0525,286.265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,709,25708,"if (jsub %iscall% c(""""!"""", """"-"""") && length(jsub)==2L) {  # length 2 to only match unary, #2109","if (jsub %iscall% c(""""!"""", """"-"""") && length(jsub)<=2L) {  # length 2 to only match unary, #2109",2156,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:41,0.0780555555555556,914.375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,709,25708,"if (jsub %iscall% c(""""!"""", """"-"""") && length(jsub)==2L) {  # length 2 to only match unary, #2109","if (jsub %iscall% c(""""!"""", """"-"""") && length(jsub)>=2L) {  # length 2 to only match unary, #2109",2157,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:41,0.0780555555555556,582.0859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,709,25708,"if (jsub %iscall% c(""""!"""", """"-"""") && length(jsub)==2L) {  # length 2 to only match unary, #2109","if (jsub %iscall% c( """"-"""",""""!"""") && length(jsub)==2L) {  # length 2 to only match unary, #2109",2168,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:57,0.0658333333333333,1241.8046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,757,2,"stopf(""""When with=FALSE, j-argument should be of type logical/character/integer indicating the columns to select."""") # fix for #1440.","stopf(""""When with=FALSE, j-argument should be of type logical/character/integer indicating the columns to select."""") # fix for #1440.
break;",2371,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9793215,00:04:37,0.0769444444444444,601.0546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,757,2,"stopf(""""When with=FALSE, j-argument should be of type logical/character/integer indicating the columns to select."""") # fix for #1440.","stopf(""""When with=FALSE, j-argument should be of type logical/character/integer indicating the columns to select."""") # fix for #1440.
continue;",2372,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:04:37,0.0769444444444444,601,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,860,516,if (is.null(nomatch)) irows = irows[irows!=0L]   # TO DO: can be removed now we have CisSortedSubset,if (is.null(nomatch)) irows = irows[irows>=0L]   # TO DO: can be removed now we have CisSortedSubset,2719,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:20,0.0555555555555556,290.21484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,860,516,if (is.null(nomatch)) irows = irows[irows!=0L]   # TO DO: can be removed now we have CisSortedSubset,if (is.null(nomatch)) irows = irows[irows>0L]   # TO DO: can be removed now we have CisSortedSubset,2720,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:19,0.0552777777777778,290.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,860,516,if (is.null(nomatch)) irows = irows[irows!=0L]   # TO DO: can be removed now we have CisSortedSubset,if (is.null(nomatch)) irows = irows[irows!=-1L]   # TO DO: can be removed now we have CisSortedSubset,2723,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:21,0.0558333333333333,290.6171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,899,2,if (length(byval)==1L && is.null(byval[[1L]])) bynull=TRUE #3530 when by=(function()NULL)(),if (length(byval)>=1L && is.null(byval[[1L]])) bynull=TRUE #3530 when by=(function()NULL)(),2852,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:36,0.0433333333333333,746.8671875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,910,1,if (is.name(bysubl[[1L]]) && bysubl[[1L]] == '{') bysubl = bysubl[[length(bysubl)]] # fix for #3156,if (is.name(bysubl[[1L]]) && bysubl[[1L]] >= '{') bysubl = bysubl[[length(bysubl)]] # fix for #3156,2918,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:46,0.0461111111111111,894.87890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,940,18871,"if (length(x)!=1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov","if (length(x)>1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov",3020,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:06,0.0516666666666667,286.84375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,940,18871,"if (length(x)!=1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov","if (length(x)<1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov",3021,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:34,0.0427777777777778,729.27734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,940,18871,"if (length(x)!=1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov","if (length(x)!=1L) stopf("""""""", length(x))  # nocov",3026,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:02,0.0505555555555556,268.890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,940,18871,"if (length(x)!=1L) stopf(""""Internal error: drop_dot passed %d items"""", length(x))  # nocov","if (length(x)!=1L) stopf( length(x,""""Internal error: drop_dot passed %d items""""))  # nocov",3027,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:03:10,0.0527777777777778,377.29296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,972,1327,return(q) # else empty list is needed for test 468: adding an empty list column,"return(q) # else empty list is needed for test 468: adding an empty list column
break;",3207,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9793215,00:03:53,0.0647222222222222,830.0546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,972,1327,return(q) # else empty list is needed for test 468: adding an empty list column,"return(q) # else empty list is needed for test 468: adding an empty list column
continue;",3208,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:03:53,0.0647222222222222,582.04296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,997,949,"ansvars = sdvars = dupdiff(names_x, union(bynames, allbyvars))   # TO DO: allbyvars here for vars used by 'by'. Document.","ansvars = sdvars = dupdiff(names_x, union( allbyvars,bynames))   # TO DO: allbyvars here for vars used by 'by'. Document.",3315,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:29,0.0747222222222222,733.515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1162,73,".Call(Cassign, x, irows, NULL, NULL, NULL) # only purpose is to write 0 to .Last.updated",".Call(Cassign, x, NULL, irows, NULL, NULL) # only purpose is to write 0 to .Last.updated",3820,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:41,0.0613888888888889,286.58203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1174,693,"if ((ok<-selfrefok(x, verbose=FALSE))==0L)   # ok==0 so no warning when loaded from disk (-1) [-1 considered TRUE by R]","if ((ok<-selfrefok( verbose=FALSE,x))==0L)   # ok==0 so no warning when loaded from disk (-1) [-1 considered TRUE by R]",3856,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:23,0.0563888888888889,1011.08203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1182,14,if (is.name(name) && ok && verbose) { # && NAMED(x)>0 (TO DO)    # ok here includes -1 (loaded from disk),if (is.name(name) || ok && verbose) { # && NAMED(x)>0 (TO DO)    # ok here includes -1 (loaded from disk),3888,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:18,0.055,420.65625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1182,14,if (is.name(name) && ok && verbose) { # && NAMED(x)>0 (TO DO)    # ok here includes -1 (loaded from disk),if (is.name(name) && ok || verbose) { # && NAMED(x)>0 (TO DO)    # ok here includes -1 (loaded from disk),3889,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:15,0.0541666666666667,294.328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1198,14,"setalloccol(x, n, verbose=verbose)   # always assigns to calling scope; i.e. this scope","setalloccol(x, verbose=verbose, n)   # always assigns to calling scope; i.e. this scope",3913,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:53,0.0480555555555556,982.46484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1268,19188,"syms = syms[ substr(syms, 3L, 3L) != """"."""" ]  # exclude ellipsis","syms = syms[ substr(syms, 3L, 3L) > """"."""" ]  # exclude ellipsis",4230,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:41,0.0613888888888889,290.12890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1328,245,"if (keylen && (ichk || is.logical(i) || (.Call(CisOrderedSubset, irows, nrow(x)) && ((roll == FALSE) || length(irows) == 1L)))) # see #1010. don't set key when i has no key, but irows is ordered and roll != FALSE","if (keylen && (ichk || is.logical(i) || (.Call(CisOrderedSubset, irows, nrow(x)) && ((roll <= FALSE) || length(irows) == 1L)))) # see #1010. don't set key when i has no key, but irows is ordered and roll != FALSE",4425,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:51,0.0641666666666667,748.921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1328,245,"if (keylen && (ichk || is.logical(i) || (.Call(CisOrderedSubset, irows, nrow(x)) && ((roll == FALSE) || length(irows) == 1L)))) # see #1010. don't set key when i has no key, but irows is ordered and roll != FALSE","if (keylen && (ichk || is.logical(i) || (.Call(CisOrderedSubset, irows, nrow(x)) && ((roll == FALSE) || length(irows) <= 1L)))) # see #1010. don't set key when i has no key, but irows is ordered and roll != FALSE",4426,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:52,0.0644444444444445,614.4765625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1400,1006,length(irows) && !anyNA(irows) && all(irows==0L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,length(irows) && !anyNA(irows) && all(irows<=0L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,4680,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:53,0.0480555555555556,810.96875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1400,1006,length(irows) && !anyNA(irows) && all(irows==0L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,length(irows) && !anyNA(irows) && all(irows<0L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,4683,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:34,0.0427777777777778,746.71875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1400,1006,length(irows) && !anyNA(irows) && all(irows==0L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,length(irows) && !anyNA(irows) && all(irows==-1L) ## anyNA() because all() returns NA (not FALSE) when irows is all-NA. TODO: any way to not check all 'irows' values?,4685,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:51,0.0475,829.91015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1408,1,if (length(jvnames) > length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,if (length(jvnames) < length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,4712,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1408,1,if (length(jvnames) > length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,if (length(jvnames) == length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,4713,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.8359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1408,1,if (length(jvnames) > length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,if (length(jvnames) >= length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,4714,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,357.86328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1408,1,if (length(jvnames) > length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,if (length(jvnames) <= length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,4715,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,399.80078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1408,1,if (length(jvnames) > length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,if (length(jvnames) != length(jval)) jvnames = jvnames[seq_along(jval)]  #4274,4716,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:40,0.0611111111111111,284.76953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1463,257,(roll==FALSE && is.sorted(f__)) # roll==FALSE is fix for #1010,(roll<=FALSE && is.sorted(f__)) # roll==FALSE is fix for #1010,4904,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:38,0.0438888888888889,548.09375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1465,257,"xjisvars = intersect(av, names_x[rightcols])  # no """"x."""" for xvars.","xjisvars = intersect( names_x[rightcols],av)  # no """"x."""" for xvars.",4913,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:05,0.0513888888888889,810.9609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1471,61,"tt = min(nrow(i),1L)  # min() is here for when nrow(i)==0","tt = min(1L,nrow(i))  # min() is here for when nrow(i)==0",4932,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:41,0.0447222222222222,829.89453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1549,8,"if (!is.data.table(SDenv$.SDall)) setattr(SDenv$.SDall, """"class"""", c(""""data.table"""",""""data.frame""""))  # DF |> DT(,.SD[...],by=grp) needs .SD to be data.table, test 2022.012","if (!is.data.table(SDenv$.SDall)) setattr(SDenv$.SDall, """"class"""", c(""""data.table"""",""""""""))  # DF |> DT(,.SD[...],by=grp) needs .SD to be data.table, test 2022.012",5139,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:47,0.0630555555555556,508.56640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1570,3449,"if ( getOption(""""datatable.optimize"""")>=1L && (is.call(jsub) || (is.name(jsub) && jsub %chin% c("""".SD"""", """".N""""))) ) {  # Ability to turn off if problems or to benchmark the benefit","if ( getOption(""""datatable.optimize"""")>=1L && (is.call(jsub) || (is.name(jsub) && jsub %chin% c( """".N"""","""".SD""""))) ) {  # Ability to turn off if problems or to benchmark the benefit",5234,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:08,0.0688888888888889,288.5078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1573,3347,funi = 1L # Fix for #985,funi = 0L # Fix for #985,5237,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:09,0.0691666666666667,288.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1573,3347,funi = 1L # Fix for #985,funi = -1L # Fix for #985,5238,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:08,0.0688888888888889,290.171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1577,33,"if (length(names(txt))>1L) .Call(Csetcharvec, names(txt), 2L, """""""")  # fixes bug #110","if (length(names(txt))>=1L) .Call(Csetcharvec, names(txt), 2L, """""""")  # fixes bug #110",5251,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:11,0.0697222222222222,928.125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1577,33,"if (length(names(txt))>1L) .Call(Csetcharvec, names(txt), 2L, """""""")  # fixes bug #110","if (length(names(txt))>0L) .Call(Csetcharvec, names(txt), 2L, """""""")  # fixes bug #110",5254,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:11,0.0697222222222222,1123.7734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1584,53,"thisfun = paste0(""""..FUN"""", funi) # Fix for #985","thisfun = paste0("""""""", funi) # Fix for #985",5279,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:20,0.0722222222222222,1122.3125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1584,53,"thisfun = paste0(""""..FUN"""", funi) # Fix for #985","thisfun = paste0( funi,""""..FUN"""") # Fix for #985",5280,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:20,0.0722222222222222,1123.0234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1618,3128,} else if (length(as.character(jsub[[1L]])) == 1L) {  # Else expect problems with <jsub[[1L]] == >,} else if (length(as.character(jsub[[1L]])) <= 1L) {  # Else expect problems with <jsub[[1L]] == >,5365,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:06,0.0683333333333333,1242.50390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1618,3128,} else if (length(as.character(jsub[[1L]])) == 1L) {  # Else expect problems with <jsub[[1L]] == >,} else if (length(as.character(jsub[[1L]])) >= 1L) {  # Else expect problems with <jsub[[1L]] == >,5366,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:06,0.0683333333333333,1243.98828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1628,2,"if (headopt && length(jsub)==2L) jsub[[""""n""""]] = 6L # head-tail n=6 when missing #3462","if (headopt && length(jsub)<=2L) jsub[[""""n""""]] = 6L # head-tail n=6 when missing #3462",5496,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:52,0.0644444444444445,360.93359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1656,13,"if (this == """".SD"""") { # optimise '.SD' alone","if (this >= """".SD"""") { # optimise '.SD' alone",5601,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:07,0.0686111111111111,796.640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1673,96,funi = funi + 1L # Fix for #985,funi = funi - 1L # Fix for #985,5662,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:11,0.0697222222222222,733.7265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1673,96,funi = funi + 1L # Fix for #985,funi = funi + -1L # Fix for #985,5666,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:12,0.07,1242.37109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1782,18,"if (!(q2 <- q[[2L]]) %chin% names(SDenv$.SDall) && q2 != """".I"""") return(FALSE)  # 875","if (!(q2 <- q[[2L]]) %chin% names(SDenv$.SDall) && q2 > """".I"""") return(FALSE)  # 875",6190,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:53,0.0647222222222222,842.44921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1943,3391,"if (is.list(x) && current_depth <= MAX_DEPTH) {  # is.list() used to be is.recursive(), #4814","if (is.list(x) && current_depth != MAX_DEPTH) {  # is.list() used to be is.recursive(), #4814",6867,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:11,0.0530555555555556,340.57421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1943,3391,"if (is.list(x) && current_depth <= MAX_DEPTH) {  # is.list() used to be is.recursive(), #4814","if (is.list(x) && current_depth < MAX_DEPTH) {  # is.list() used to be is.recursive(), #4814",6868,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:11,0.0530555555555556,340.57421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1959,64,"jvals = if (vlen==length(len__)) lapply(tail(ans, -length(g)), rep, times=len__) else tail(ans, -length(g))  # see comment in #4245 for why rep instead of rep.int","jvals = if (vlen<=length(len__)) lapply(tail(ans, -length(g)), rep, times=len__) else tail(ans, -length(g))  # see comment in #4245 for why rep instead of rep.int",6913,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:13,0.0702777777777778,747.27734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1959,64,"jvals = if (vlen==length(len__)) lapply(tail(ans, -length(g)), rep, times=len__) else tail(ans, -length(g))  # see comment in #4245 for why rep instead of rep.int","jvals = if (vlen==length(len__)) lapply(tail(ans, -length(g)), times=len__, rep) else tail(ans, -length(g))  # see comment in #4245 for why rep instead of rep.int",6922,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:56,0.0655555555555556,858.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,1963,51,if (length(jvals)==1L) jvals = jvals[[1L]]  # unwrap single column jvals for assign,if (length(jvals)<=1L) jvals = jvals[[1L]]  # unwrap single column jvals for assign,6936,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:06,0.0683333333333333,809.01171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2036,53,"if (length(expr)==2L)  # no parameters passed to mean, so defaults of trim=0 and na.rm=FALSE","if (length(expr)<=2L)  # no parameters passed to mean, so defaults of trim=0 and na.rm=FALSE",7221,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:49,0.0636111111111111,982.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2039,6,"if (length(expr)==3L && startsWith(names(expr)[3L], """"na""""))   # one parameter passed to mean()","if (length(expr)<=3L && startsWith(names(expr)[3L], """"na""""))   # one parameter passed to mean()",7242,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:46,0.0461111111111111,372.69140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2039,6,"if (length(expr)==3L && startsWith(names(expr)[3L], """"na""""))   # one parameter passed to mean()","if (length(expr)>=3L && startsWith(names(expr)[3L], """"na""""))   # one parameter passed to mean()",7243,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:48,0.0633333333333333,732.8203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2197,30,return(setalloccol(x))    # over-allocate (again).   Avoid all this by using :=.,"return(setalloccol(x))    # over-allocate (again).   Avoid all this by using :=.
break;",7815,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9793215,00:04:04,0.0677777777777778,523.0703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2197,30,return(setalloccol(x))    # over-allocate (again).   Avoid all this by using :=.,"return(setalloccol(x))    # over-allocate (again).   Avoid all this by using :=.
continue;",7816,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:04:05,0.0680555555555556,520.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2239,22,"x = setalloccol(x, length(x)+length(newnames)) # because [<- copies via *tmp* and main/duplicate.c copies at length but copies truelength over too","x = setalloccol(x, length(x)-length(newnames)) # because [<- copies via *tmp* and main/duplicate.c copies at length but copies truelength over too",7938,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:00,0.0666666666666667,290.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2239,22,"x = setalloccol(x, length(x)+length(newnames)) # because [<- copies via *tmp* and main/duplicate.c copies at length but copies truelength over too","x = setalloccol(x, length(x)*length(newnames)) # because [<- copies via *tmp* and main/duplicate.c copies at length but copies truelength over too",7939,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:58,0.0661111111111111,288.48828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2260,26,"set(x,j=name,value=value)  # important i is missing here","set(x,value=value,j=name)  # important i is missing here",7994,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:57,0.0658333333333333,284.13671875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2260,26,"set(x,j=name,value=value)  # important i is missing here","set(j=name,x,value=value)  # important i is missing here",7995,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:56,0.0655555555555556,292.52734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2265,103,"ans = setDF(copy(x), rownames = row.names) # issue #5319","ans = setDF( rownames = row.names,copy(x)) # issue #5319",8006,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:00,0.0666666666666667,288.625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2309,12,"x = .shallow(x, retain.key=TRUE) # `names<-` should not modify by reference. Related to #1015, #476 and #825. Needed for R v3.1.0+.  TO DO: revisit","x = .shallow(x, #476 and #825. Needed for R v3.1.0+.  TO DO: revisit
, retain.key=TRUE) # `names<-` should not modify by reference. Related to #1015",8139,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:13,0.0536111111111111,357.8671875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2309,12,"x = .shallow(x, retain.key=TRUE) # `names<-` should not modify by reference. Related to #1015, #476 and #825. Needed for R v3.1.0+.  TO DO: revisit","x = .shallow( retain.key=TRUE,x) # `names<-` should not modify by reference. Related to #1015, #476 and #825. Needed for R v3.1.0+.  TO DO: revisit",8140,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:21,0.0558333333333333,1011.07421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2482,114,"by.order = if (!sorted) x[, funique(.SD), .SDcols=cols] # remember order of data, only when not sorted=FALSE","by.order = if (!sorted) x[, .SDcols=cols, funique(.SD)] # remember order of data, only when not sorted=FALSE",8573,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:51,0.0641666666666667,366.02734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2585,75,"reducedindex = paste0(""""__"""", indexcols[seq_len(indexlength)], collapse="""""""") ## the columns until the first missing from the new index","reducedindex = paste0(""""__"""", collapse="""""""", indexcols[seq_len(indexlength)]) ## the columns until the first missing from the new index",8874,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:07,0.0686111111111111,776.41015625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2611,15574,"ans = .shallow(x, cols=cols, retain.key=selfrefok(x))  # selfrefok for #5042","ans = .shallow( cols=cols,x, retain.key=selfrefok(x))  # selfrefok for #5042",8964,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:45,0.0458333333333333,366.03515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2752,803,"neworder = colnamesInt(x, neworder, check_dups=FALSE)  # dups are now checked inside Csetcolorder below","neworder = colnamesInt(x, check_dups=FALSE, neworder)  # dups are now checked inside Csetcolorder below",9447,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:59,0.0663888888888889,858.48828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,2815,1,"if (identical(use.names, NA)) stopf(""""use.names=NA invalid"""")  # otherwise use.names=NA could creep in an usage equivalent to use.names='check'","if (identical( NA,use.names)) stopf(""""use.names=NA invalid"""")  # otherwise use.names=NA could creep in an usage equivalent to use.names='check'",9621,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:54,0.0483333333333333,696.52734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3012,96,"xorder = forderv(x, by=cols, sort=FALSE, retGrp=TRUE) # speedup on char with sort=FALSE","xorder = forderv(x, sort=FALSE, by=cols, retGrp=TRUE) # speedup on char with sort=FALSE",10347,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:48,0.0633333333333333,310.0625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3012,96,"xorder = forderv(x, by=cols, sort=FALSE, retGrp=TRUE) # speedup on char with sort=FALSE","xorder = forderv(x, by=cols, retGrp=TRUE, sort=FALSE) # speedup on char with sort=FALSE",10348,1 NOTE,0:0,NOTE:installed package size,9793215,00:04:05,0.0680555555555556,288.265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3012,96,"xorder = forderv(x, by=cols, sort=FALSE, retGrp=TRUE) # speedup on char with sort=FALSE","xorder = forderv( by=cols,x, sort=FALSE, retGrp=TRUE) # speedup on char with sort=FALSE",10349,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:24,0.0566666666666667,288.33203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3110,13,"if (length(remainingIsub[[1L]]) != 1L) return(NULL) ## only single symbol, either '&' or one of validOps allowed.","if (length(remainingIsub[[1L]]) > 1L) return(NULL) ## only single symbol, either '&' or one of validOps allowed.",10715,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:04,0.0511111111111111,737.57421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3110,13,"if (length(remainingIsub[[1L]]) != 1L) return(NULL) ## only single symbol, either '&' or one of validOps allowed.","if (length(remainingIsub[[1L]]) < 1L) return(NULL) ## only single symbol, either '&' or one of validOps allowed.",10716,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:04,0.0511111111111111,811.06640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3133,12979,"if (length(stub[[1L]]) != 1) return(NULL) # nocov Whatever it is, definitely not one of the valid operators","if (length(stub[[1L]]) > 1) return(NULL) # nocov Whatever it is, definitely not one of the valid operators",10783,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:01,0.0502777777777778,810.97265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3133,12979,"if (length(stub[[1L]]) != 1) return(NULL) # nocov Whatever it is, definitely not one of the valid operators","if (length(stub[[1L]]) < 1) return(NULL) # nocov Whatever it is, definitely not one of the valid operators",10784,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:53,0.0480555555555556,982.421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3145,5,return(NULL) # DT[colA == colB] regular element-wise vector scan,"return(NULL) # DT[colA == colB] regular element-wise vector scan
break;",10854,1 NOTE,0:0,NOTE:installed package size,9793215,00:02:59,0.0497222222222222,982.51171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3145,5,return(NULL) # DT[colA == colB] regular element-wise vector scan,"return(NULL) # DT[colA == colB] regular element-wise vector scan
continue;",10855,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793215,00:03:00,0.05,982.46484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3147,2094,if ( mode(x[[col]]) != mode(RHS) ||                # mode() so that doubleLHS/integerRHS and integerLHS/doubleRHS!isReallyReal are optimized (both sides mode 'numeric'),if ( mode(x[[col]]) > mode(RHS) ||                # mode() so that doubleLHS/integerRHS and integerLHS/doubleRHS!isReallyReal are optimized (both sides mode 'numeric'),10861,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:42,0.0616666666666667,376.77734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3148,2094,is.factor(x[[col]])+is.factor(RHS) == 1L ||   # but factor is also mode 'numeric' so treat that separately,is.factor(x[[col]])-is.factor(RHS) == 1L ||   # but factor is also mode 'numeric' so treat that separately,10864,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:43,0.0619444444444445,342.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,data.table.R,3195,4,idx = integer(0L) ## integer(0L) not NULL! Indicates that x is ordered correctly.,idx = integer(1L) ## integer(0L) not NULL! Indicates that x is ordered correctly.,11004,1 NOTE,0:0,NOTE:installed package size,9793215,00:03:43,0.0619444444444445,376.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,6,12,if (nrow(x) == 0L || ncol(x) == 0L) return(logical(0L)) # fix for bug #28,if (nrow(x) <= 0L || ncol(x) == 0L) return(logical(0L)) # fix for bug #28,21,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:48,0.0633333333333333,301.296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,6,12,if (nrow(x) == 0L || ncol(x) == 0L) return(logical(0L)) # fix for bug #28,if (nrow(x) == 0L || ncol(x) <= 0L) return(logical(0L)) # fix for bug #28,22,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:48,0.0633333333333333,339.15625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,6,12,if (nrow(x) == 0L || ncol(x) == 0L) return(logical(0L)) # fix for bug #28,if (nrow(x) == 0L || ncol(x) < 0L) return(logical(0L)) # fix for bug #28,28,1 NOTE,0:0,NOTE:installed package size,9793223,00:02:37,0.0436111111111111,746.47265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,6,12,if (nrow(x) == 0L || ncol(x) == 0L) return(logical(0L)) # fix for bug #28,if (nrow(x) == 0L || ncol(x) == -1L) return(logical(0L)) # fix for bug #28,33,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:41,0.0613888888888889,285.41796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,40,57,"if (attr(o, 'maxgrpn', exact=TRUE) == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.","if (attr(o, 'maxgrpn', exact=TRUE) <= 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.",149,1 NOTE,0:0,NOTE:installed package size,9793223,00:02:59,0.0497222222222222,982.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,40,57,"if (attr(o, 'maxgrpn', exact=TRUE) == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.","if (attr(o, 'maxgrpn', exact=TRUE) < 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.",152,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:34,0.0594444444444445,288.28125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,40,57,"if (attr(o, 'maxgrpn', exact=TRUE) == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.","if (attr(o, 'maxgrpn', exact=TRUE) == 0L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.",153,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:41,0.0613888888888889,292.875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,40,57,"if (attr(o, 'maxgrpn', exact=TRUE) == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.","if (attr(o, 'maxgrpn', exact=TRUE) == -1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.",154,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:41,0.0613888888888889,291.62890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,duplicated.R,40,57,"if (attr(o, 'maxgrpn', exact=TRUE) == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.","if (attr(o, exact=TRUE, 'maxgrpn') == 1L) return(copy(x))  # return copy so that unique(x)[, col := val] doesn't affect original data.table, #3383.",157,1 NOTE,0:0,NOTE:installed package size,9793223,00:03:44,0.0622222222222222,340.68359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fcast.R,195,63,"map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv(dat, cols=cols, ties.method=""""dense"""", na.last=FALSE))) # #2202 fix","map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv(dat, ties.method=""""dense"""", cols=cols, na.last=FALSE))) # #2202 fix",697,1 NOTE,0:0,NOTE:installed package size,9793280,00:03:42,0.0616666666666667,284.734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fcast.R,195,63,"map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv(dat, cols=cols, ties.method=""""dense"""", na.last=FALSE))) # #2202 fix","map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv(dat, cols=cols, na.last=FALSE, ties.method=""""dense""""))) # #2202 fix",698,1 NOTE,0:0,NOTE:installed package size,9793280,00:03:46,0.0627777777777778,339.86328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fcast.R,195,63,"map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv(dat, cols=cols, ties.method=""""dense"""", na.last=FALSE))) # #2202 fix","map = setDT(lapply(list(lhsnames, rhsnames), function(cols) frankv( cols=cols,dat, ties.method=""""dense"""", na.last=FALSE))) # #2202 fix",702,1 NOTE,0:0,NOTE:installed package size,9793280,00:03:29,0.0580555555555556,290.53515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,55,72,"if (!storage.mode(xval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(xval2) %chin% c(""""double"""", """"integer"""") || is.factor(xval1) || is.factor(xval2)) # adding factors to the bunch, #2645","if (!storage.mode(xval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(xval2) %chin% c(""""double"""", """"integer"""") || is.factor(xval1) || is.factor(xval1)) # adding factors to the bunch, #2645",370,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:48,0.0633333333333333,339.140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,55,72,"if (!storage.mode(xval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(xval2) %chin% c(""""double"""", """"integer"""") || is.factor(xval1) || is.factor(xval2)) # adding factors to the bunch, #2645","if (!storage.mode(xval1) %chin% c( """"integer"""",""""double"""") || !storage.mode(xval2) %chin% c(""""double"""", """"integer"""") || is.factor(xval1) || is.factor(xval2)) # adding factors to the bunch, #2645",397,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:55,0.0652777777777778,310.41796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,55,72,"if (!storage.mode(xval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(xval2) %chin% c(""""double"""", """"integer"""") || is.factor(xval1) || is.factor(xval2)) # adding factors to the bunch, #2645","if (!storage.mode(xval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(xval2) %chin% c( """"integer"""",""""double"""") || is.factor(xval1) || is.factor(xval2)) # adding factors to the bunch, #2645",399,1 NOTE,0:0,NOTE:installed package size,9793351,00:02:42,0.045,746.3359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,65,67,"if (!storage.mode(yval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(yval2) %chin% c(""""double"""", """"integer"""") || is.factor(yval1) || is.factor(yval2)) # adding factors to the bunch, #2645","if (!storage.mode(yval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(yval2) %chin% c(""""double"""", """"integer"""") || is.factor(yval1) || is.factor(yval1)) # adding factors to the bunch, #2645",478,1 NOTE,0:0,NOTE:installed package size,9793351,00:02:50,0.0472222222222222,944.7578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,65,67,"if (!storage.mode(yval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(yval2) %chin% c(""""double"""", """"integer"""") || is.factor(yval1) || is.factor(yval2)) # adding factors to the bunch, #2645","if (!storage.mode(yval1) %chin% c( """"integer"""",""""double"""") || !storage.mode(yval2) %chin% c(""""double"""", """"integer"""") || is.factor(yval1) || is.factor(yval2)) # adding factors to the bunch, #2645",505,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:34,0.0594444444444445,289.953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,65,67,"if (!storage.mode(yval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(yval2) %chin% c(""""double"""", """"integer"""") || is.factor(yval1) || is.factor(yval2)) # adding factors to the bunch, #2645","if (!storage.mode(yval1) %chin% c(""""double"""", """"integer"""") || !storage.mode(yval2) %chin% c( """"integer"""",""""double"""") || is.factor(yval1) || is.factor(yval2)) # adding factors to the bunch, #2645",507,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:44,0.0622222222222222,340.578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,80,61,"getTZ = function(x) if (is.null(tz <- attr(x, """"tzone"""", exact=TRUE))) """""""" else tz # """""""" == NULL AFAICT","getTZ = function(x) if (is.null(tz <- attr(x, exact=TRUE, """"tzone""""))) """""""" else tz # """""""" == NULL AFAICT",625,1 NOTE,0:0,NOTE:installed package size,9793351,00:02:32,0.0422222222222222,728.23046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,112,5,"if (isposix) mcall[[2L]] = call(""""unclass"""", mcall[[2L]]) # fix for R-devel change in c.POSIXct","if (isposix) mcall[[0L]] = call(""""unclass"""", mcall[[2L]]) # fix for R-devel change in c.POSIXct",781,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:40,0.0611111111111111,290.7890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,140,61,"if (ans$allLen1) ans$starts else vecseq(ans$starts, ans$lens, NULL) # nocov","if (ans$allLen1) ans$starts else vecseq(ans$starts, NULL, ans$lens) # nocov",930,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:02,0.0505555555555556,831.8515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,140,61,"if (ans$allLen1) ans$starts else vecseq(ans$starts, ans$lens, NULL) # nocov","if (ans$allLen1) ans$starts else vecseq( ans$lens,ans$starts, NULL) # nocov",931,1 NOTE,0:0,NOTE:installed package size,9793351,00:03:02,0.0505555555555556,829.90625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,foverlaps.R,144,18,"sidx = eidx = matches(x, y, intervals[2L], rollends=c(FALSE,FALSE), ...) ## TODO: eidx can be set to integer(0L)","sidx = eidx = matches(x, y, intervals[-1L], rollends=c(FALSE,FALSE), ...) ## TODO: eidx can be set to integer(0L)",949,1 NOTE,0:0,NOTE:installed package size,9793351,00:02:47,0.0463888888888889,603.49609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,frank.R,26,390,"x = .shallow(x, cols, unlock = TRUE) # shallow copy even if list..","x = .shallow(x, unlock = TRUE, cols) # shallow copy even if list..",104,1 NOTE,0:0,NOTE:installed package size,9793352,00:03:40,0.0611111111111111,292.625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,frank.R,67,388,V1 = NULL # for R CMD CHECK warning,V0 = NULL # for R CMD CHECK warning,254,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793352,00:03:34,0.0594444444444445,288.3359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,11,1402,input_has_vars = length(all.vars(substitute(input)))>0L  # see news for v1.11.6,input_has_vars = length(all.vars(substitute(input)))!=0L  # see news for v1.11.6,88,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:24,0.0566666666666667,1011.07421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,15,3,"if (sep=="""""""") { sep=""""\n"""" }         # meaning readLines behaviour. The 3 values (NULL, """""""" or """"\n"""") are equivalent.","if (sep<="""""""") { sep=""""\n"""" }         # meaning readLines behaviour. The 3 values (NULL, """""""" or """"\n"""") are equivalent.",111,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:41,0.0613888888888889,291.21484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,16,1366,"else if (sep==""""auto"""") sep=""""""""      # sep=="""""""" at C level means auto sep","else if (sep>=""""auto"""") sep=""""""""      # sep=="""""""" at C level means auto sep",117,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:50,0.0638888888888889,366.51171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,17,28,else stopifnot( nchar(sep)==1L )  # otherwise an actual character to use as sep,else stopifnot( nchar(sep)<=1L )  # otherwise an actual character to use as sep,121,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:37,0.0602777777777778,288.52734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,17,28,else stopifnot( nchar(sep)==1L )  # otherwise an actual character to use as sep,else stopifnot( nchar(sep)>=1L )  # otherwise an actual character to use as sep,122,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:36,0.06,290.4765625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,31,2,"if (is.na(nrows) || nrows<0) nrows=Inf   # accept -1 to mean Inf, as read.table does","if (is.na(nrows) || nrows<(0-1)) nrows=Inf   # accept -1 to mean Inf, as read.table does",242,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:42,0.0616666666666667,370.28125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,34,1398,"is.logical(header) && length(header)==1L,  # TRUE, FALSE or NA","is.logical(header) && length(header)<=1L,  # TRUE, FALSE or NA",251,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:41,0.0613888888888889,292.55078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,34,1398,"is.logical(header) && length(header)==1L,  # TRUE, FALSE or NA","is.logical(header) && length(header)>=1L,  # TRUE, FALSE or NA",252,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:44,0.0622222222222222,357.85546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,34,1398,"is.logical(header) && length(header)==1L,  # TRUE, FALSE or NA","is.logical(header) || length(header)==1L,  # TRUE, FALSE or NA",257,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:43,0.0619444444444445,343.9140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,59,737,"} else if (length(grep(' ', input, fixed=TRUE)) && !file.exists(input)) {  # file name or path containing spaces is not a command","} else if (length(grep(' ', fixed=TRUE, input)) && !file.exists(input)) {  # file name or path containing spaces is not a command",361,1 NOTE,0:0,NOTE:installed package size,9793369,00:02:45,0.0458333333333333,982.48046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,76,752,"if (w <- startsWithAny(file, c(""""https://"""", """"ftps://"""", """"http://"""", """"ftp://"""", """"file://""""))) {  # avoid grepl() for #2531","if (w <- startsWithAny(file, c( """"ftps://"""",""""https://"""", """"http://"""", """"ftp://"""", """"file://""""))) {  # avoid grepl() for #2531",459,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:34,0.0594444444444445,290.390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,121,39,"R.utils::decompressFile(file, decompFile<-tempfile(tmpdir=tmpdir), ext=NULL, FUN=FUN, remove=FALSE)   # ext is not used by decompressFile when destname is supplied, but isn't optional","R.utils::decompressFile(file, ext=NULL, decompFile<-tempfile(tmpdir=tmpdir), FUN=FUN, remove=FALSE)   # ext is not used by decompressFile when destname is supplied, but isn't optional",717,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:46,0.0627777777777778,339.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,121,39,"R.utils::decompressFile(file, decompFile<-tempfile(tmpdir=tmpdir), ext=NULL, FUN=FUN, remove=FALSE)   # ext is not used by decompressFile when destname is supplied, but isn't optional","R.utils::decompressFile(file, decompFile<-tempfile(tmpdir=tmpdir), FUN=FUN, ext=NULL, remove=FALSE)   # ext is not used by decompressFile when destname is supplied, but isn't optional",718,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:55,0.0652777777777778,284.75,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,121,39,"R.utils::decompressFile(file, decompFile<-tempfile(tmpdir=tmpdir), ext=NULL, FUN=FUN, remove=FALSE)   # ext is not used by decompressFile when destname is supplied, but isn't optional","R.utils::decompressFile(file, decompFile<-tempfile(tmpdir=tmpdir), ext=NULL, remove=FALSE, FUN=FUN)   # ext is not used by decompressFile when destname is supplied, but isn't optional",719,1 NOTE,0:0,NOTE:installed package size,9793369,00:10:02,0.167222222222222,842.28515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,278,8,"if (identical(tt,"""""""") || is_utc(tt)) # empty TZ env variable ("""""""") means UTC in C library, unlike R; _unset_ TZ means local","if (identical(tt,"""""""") && is_utc(tt)) # empty TZ env variable ("""""""") means UTC in C library, unlike R; _unset_ TZ means local",1327,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:33,0.0591666666666667,288.57421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,278,8,"if (identical(tt,"""""""") || is_utc(tt)) # empty TZ env variable ("""""""") means UTC in C library, unlike R; _unset_ TZ means local","if (identical("""""""",tt) || is_utc(tt)) # empty TZ env variable ("""""""") means UTC in C library, unlike R; _unset_ TZ means local",1330,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:35,0.0597222222222222,290.62890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,299,1341,"colClassesAs = attr(ans, """"colClassesAs"""", exact=TRUE)   # should only be present if one or more are != """"""""","colClassesAs = attr(ans, exact=TRUE, """"colClassesAs"""")   # should only be present if one or more are != """"""""",1427,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:32,0.0588888888888889,288.56640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,300,1341,"for (j in which(colClassesAs!="""""""")) {       # # 1634","for (j in which(colClassesAs>"""""""")) {       # # 1634",1432,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:22,0.0561111111111111,290.640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,321,73,"set(ans, j = j, value = new_v)  # aside: new_v == v if the coercion was aborted","set(ans, value = new_v, j = j)  # aside: new_v == v if the coercion was aborted",1481,1 NOTE,0:0,NOTE:installed package size,9793369,00:02:33,0.0425,693.23046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,321,73,"set(ans, j = j, value = new_v)  # aside: new_v == v if the coercion was aborted","set( j = j,ans, value = new_v)  # aside: new_v == v if the coercion was aborted",1482,1 NOTE,0:0,NOTE:installed package size,9793369,00:02:43,0.0452777777777778,829.875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fread.R,376,8,"scan(text=x, what=raw(), quiet=TRUE)  # as in read.csv, which ultimately uses src/main/scan.c and strtoraw","scan(text=x, quiet=TRUE, what=raw())  # as in read.csv, which ultimately uses src/main/scan.c and strtoraw",1673,1 NOTE,0:0,NOTE:installed package size,9793369,00:03:52,0.0644444444444445,360.91796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fwrite.R,55,348,"length(na) == 1L, #1725, handles NULL or character(0) input","length(na) >= 1L, #1725, handles NULL or character(0) input",291,1 NOTE,0:0,NOTE:installed package size,9793410,00:03:43,0.0619444444444445,340.75,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fwrite.R,70,301,"if (identical(quote,""""auto"""")) quote=NA  # logical NA","if (identical(""""auto"""",quote)) quote=NA  # logical NA",393,1 NOTE,0:0,NOTE:installed package size,9793410,00:02:44,0.0455555555555556,600.99609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fwrite.R,90,336,"stopf(""""'data.table' relies on the package 'yaml' to write the file header; please add this to your library with install.packages('yaml') and try again."""") # nocov","stopf(""""'data.table' relies on the package 'yaml' to write the file header; please add this to your library with install.packages('yaml') and try again."""") # nocov
break;",468,"1 WARNING, 1 NOTE",0:0,"WARNING:whether package ‘data.table’ can be installed, NOTE:installed package size",9793410,00:03:31,0.0586111111111111,284.36328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fwrite.R,90,336,"stopf(""""'data.table' relies on the package 'yaml' to write the file header; please add this to your library with install.packages('yaml') and try again."""") # nocov","stopf(""""'data.table' relies on the package 'yaml' to write the file header; please add this to your library with install.packages('yaml') and try again."""") # nocov
continue;",469,2 NOTEs,0:0,"NOTE:installed package size, NOTE:R code for possible problems",9793410,00:03:20,0.0555555555555556,307.38671875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,fwrite.R,90,336,"stopf(""""'data.table' relies on the package 'yaml' to write the file header; please add this to your library with install.packages('yaml') and try again."""") # nocov","stopf("""""""") # nocov",470,1 NOTE,0:0,NOTE:installed package size,9793410,00:03:40,0.0611111111111111,294.6953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,merge.R,94,89,"dt = y[x, nomatch=if (all.x) NA else NULL, on=by, allow.cartesian=allow.cartesian]   # includes JIS columns (with a i. prefix if conflict with x names)","dt = y[x, on=by, nomatch=if (all.x) NA else NULL, allow.cartesian=allow.cartesian]   # includes JIS columns (with a i. prefix if conflict with x names)",368,1 NOTE,0:0,NOTE:installed package size,9793447,00:03:52,0.0644444444444445,362.8828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,merge.R,94,89,"dt = y[x, nomatch=if (all.x) NA else NULL, on=by, allow.cartesian=allow.cartesian]   # includes JIS columns (with a i. prefix if conflict with x names)","dt = y[x, nomatch=if (all.x) NA else NULL, allow.cartesian=allow.cartesian, on=by]   # includes JIS columns (with a i. prefix if conflict with x names)",369,1 NOTE,0:0,NOTE:installed package size,9793447,00:03:53,0.0647222222222222,288.46484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,merge.R,94,89,"dt = y[x, nomatch=if (all.x) NA else NULL, on=by, allow.cartesian=allow.cartesian]   # includes JIS columns (with a i. prefix if conflict with x names)","dt = y[ nomatch=if (all.x) NA else NULL,x, on=by, allow.cartesian=allow.cartesian]   # includes JIS columns (with a i. prefix if conflict with x names)",370,1 NOTE,0:0,NOTE:installed package size,9793447,00:03:53,0.0647222222222222,288.578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) == 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",54,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:42,0.0616666666666667,375.30859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) < 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",56,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:47,0.0630555555555556,355.3359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) <= 0L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",59,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:51,0.0641666666666667,363.9609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) <= 1L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",60,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:39,0.0608333333333333,420.64453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) <= -1L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",61,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:30,0.0583333333333333,288.3828125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,31,90,"if (length(SYS) <= 2L ||  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)","if (length(SYS) <= 2L &&  # """"> DT"""" auto-print or """"> print(DT)"""" explicit print (cannot distinguish from R 3.2.0 but that's ok)",62,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:32,0.0588888888888889,290.75390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,33,90,"as.character(thisSYS) == 'source') || # suppress printing from source(echo = TRUE) calls, #2369","as.character(thisSYS) == 'source') && # suppress printing from source(echo = TRUE) calls, #2369",93,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:43,0.0619444444444445,367.421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,42,1,if (nrows <= 0L) return(invisible(x))   # ability to turn off printing,if (nrows < 0L) return(invisible(x))   # ability to turn off printing,139,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:26,0.0572222222222222,614.0390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,42,1,if (nrows <= 0L) return(invisible(x))   # ability to turn off printing,if (nrows <= 1L) return(invisible(x))   # ability to turn off printing,142,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:42,0.0616666666666667,349.6953125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,42,1,if (nrows <= 0L) return(invisible(x))   # ability to turn off printing,if (nrows <= -1L) return(invisible(x))   # ability to turn off printing,143,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:43,0.0619444444444445,340.578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,68,39,"toprint = rbindlist(list(head(x, topn), tail(x, topn)), use.names=FALSE)  # no need to match names because head and tail of same x, and #3306","toprint = rbindlist(list(head(x, topn), tail(x, use.names=FALSE, topn)))  # no need to match names because head and tail of same x, and #3306",323,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:29,0.0580555555555556,394.10546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,76,573,"toprint=format.data.table(toprint, na.encode=FALSE, timezone = timezone, ...)  # na.encode=FALSE so that NA in character cols print as <NA>","toprint=format.data.table(toprint, timezone = timezone, na.encode=FALSE, ...)  # na.encode=FALSE so that NA in character cols print as <NA>",349,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:32,0.0588888888888889,289.765625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,76,573,"toprint=format.data.table(toprint, na.encode=FALSE, timezone = timezone, ...)  # na.encode=FALSE so that NA in character cols print as <NA>","toprint=format.data.table(toprint, na.encode=FALSE, ..., timezone = timezone)  # na.encode=FALSE so that NA in character cols print as <NA>",350,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:41,0.0613888888888889,290.6875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,76,573,"toprint=format.data.table(toprint, na.encode=FALSE, timezone = timezone, ...)  # na.encode=FALSE so that NA in character cols print as <NA>","toprint=format.data.table( na.encode=FALSE,toprint, timezone = timezone, ...)  # na.encode=FALSE so that NA in character cols print as <NA>",351,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:41,0.0613888888888889,290.58203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,130,17,"toprint=rbind(toprint, matrix(if (quote) old else colnames(toprint), nrow=1L)) # fixes bug #97","toprint=rbind(toprint, matrix( nrow=1L,if (quote) old else colnames(toprint))) # fixes bug #97",608,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:58,0.0661111111111111,843.2421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print!="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache",679,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:33,0.0591666666666667,287.6640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print<="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache",680,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:34,0.0594444444444445,288.55078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print>="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache",681,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:33,0.0591666666666667,287.95703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print>"""""""" ||   # to save address() calls and adding lots of address strings to R's global cache",682,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:29,0.0580555555555556,451.71875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print<"""""""" ||   # to save address() calls and adding lots of address strings to R's global cache",683,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:27,0.0575,398.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,155,620,"ret = (.global$print=="""""""" ||   # to save address() calls and adding lots of address strings to R's global cache","ret = (.global$print=="""""""" &&   # to save address() calls and adding lots of address strings to R's global cache",684,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:22,0.0561111111111111,287.7734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,197,1643,"format(char.trunc(x), ...) # relevant to #37","format( ...,char.trunc(x)) # relevant to #37",794,1 NOTE,0:0,NOTE:installed package size,9793679,00:03:38,0.0605555555555556,420.62890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,print.data.table.R,220,257,"paste(c(format(head(x, 6L), ...), if (length(x) > 6L) """"...""""), collapse="""","""") # fix for #5435 and #37 - format has to be added here...","paste(c(format(head(x, 6L), ...), if (length(x) >= 6L) """"...""""), collapse="""","""") # fix for #5435 and #37 - format has to be added here...",844,1 NOTE,0:0,NOTE:installed package size,9793679,00:04:08,0.0688888888888889,841.92578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,83,66,"tt = suppressMessages(system.time(o <- forderv(x, cols, sort=TRUE, retGrp=FALSE)))  # system.time does a gc, so we don't want this always on, until refcnt is on by default in R","tt = suppressMessages(system.time(o <- forderv(x, sort=TRUE, cols, retGrp=FALSE)))  # system.time does a gc, so we don't want this always on, until refcnt is on by default in R",295,1 NOTE,0:0,NOTE:installed package size,9793846,00:04:03,0.0675,788.34375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,83,66,"tt = suppressMessages(system.time(o <- forderv(x, cols, sort=TRUE, retGrp=FALSE)))  # system.time does a gc, so we don't want this always on, until refcnt is on by default in R","tt = suppressMessages(system.time(o <- forderv(x, cols, retGrp=FALSE, sort=TRUE)))  # system.time does a gc, so we don't want this always on, until refcnt is on by default in R",296,1 NOTE,0:0,NOTE:installed package size,9793846,00:04:02,0.0672222222222222,858.50390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,182,2,"if (any(tt)) sub[tt] = NULL  # remove any NULL or empty arguments; e.g. test 1962.052: forder(DT, NULL) and forder(DT, )","if (any( NULL,tt)) sub[tt] = NULL  # remove any NULL or empty arguments; e.g. test 1962.052: forder(DT) and forder(DT, )",588,1 NOTE,0:0,NOTE:installed package size,9793846,00:03:35,0.0597222222222222,290.6875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,194,24,sub[[i]] = v = v[[2L]]  # remove the leading +/- which is the 2nd item since length(v)==2; i.e. monadic +/-,sub[[i]] = v = v[[-1L]]  # remove the leading +/- which is the 2nd item since length(v)==2; i.e. monadic +/-,664,1 NOTE,0:0,NOTE:installed package size,9793846,00:03:26,0.0572222222222222,726.89453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,194,24,sub[[i]] = v = v[[2L]]  # remove the leading +/- which is the 2nd item since length(v)==2; i.e. monadic +/-,"sub[[i]] = v = v[[2L]]  # remove the leading +/- which is the 2nd item since length(v)==2; i.e. monadic +/-
break;",665,1 NOTE,0:0,NOTE:installed package size,9793846,00:03:27,0.0575,552.8203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setkey.R,335,11,"else if (unique) l[[i]] = y[attr(o, """"starts"""", exact=TRUE)]  # test 1525.5","else if (unique) l[[i]] = y[attr(o, exact=TRUE, """"starts"""")]  # test 1525.5",1177,1 NOTE,0:0,NOTE:installed package size,9793846,00:03:48,0.0633333333333333,354.6328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,setops.R,232,11,"jn.on = jn.on[c(which(!dbl.cols), which(dbl.cols))] # double column must be last for rolling join","jn.on = jn.on[c( which(dbl.cols,which(!dbl.cols)))] # double column must be last for rolling join",1102,1 NOTE,0:0,NOTE:installed package size,9793893,00:02:53,0.0480555555555556,841.30078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,shift.R,17,1,"if (type==""""lead"""" && length(unique(sign(n))) == 3L) neg[ n==0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)","if (type==""""lead"""" && length(unique(sign(n))) == 3L) neg[ n<=0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)",86,1 NOTE,0:0,NOTE:installed package size,9793903,00:03:03,0.0508333333333333,417.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,shift.R,17,1,"if (type==""""lead"""" && length(unique(sign(n))) == 3L) neg[ n==0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)","if (type>=""""lead"""" && length(unique(sign(n))) == 3L) neg[ n==0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)",87,1 NOTE,0:0,NOTE:installed package size,9793903,00:03:03,0.0508333333333333,393.2734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,shift.R,17,1,"if (type==""""lead"""" && length(unique(sign(n))) == 3L) neg[ n==0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)","if (type==""""lead"""" && length(unique(sign(n))) >= 3L) neg[ n==0L ] = TRUE   # lead_0 should be named lag_0 for consistency (if mixing signs of n, #3832)",88,1 NOTE,0:0,NOTE:installed package size,9793903,00:03:08,0.0522222222222222,284.43359375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,18,83,ans + ncol(DT)*.Machine$sizeof.pointer  # column name pointers,ans - ncol(DT)*.Machine$sizeof.pointer  # column name pointers,52,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:05,0.0513888888888889,286.1875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,18,83,ans + ncol(DT)*.Machine$sizeof.pointer  # column name pointers,ans / ncol(DT)*.Machine$sizeof.pointer  # column name pointers,54,1 NOTE,0:0,NOTE:installed package size,9793908,00:02:55,0.0486111111111111,459.84375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,18,83,ans + ncol(DT)*.Machine$sizeof.pointer  # column name pointers,ans + ncol(DT)+.Machine$sizeof.pointer  # column name pointers,55,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:18,0.055,429.49609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,18,83,ans + ncol(DT)*.Machine$sizeof.pointer  # column name pointers,ans + ncol(DT)-.Machine$sizeof.pointer  # column name pointers,56,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:18,0.055,429.49609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,18,83,ans + ncol(DT)*.Machine$sizeof.pointer  # column name pointers,ans + ncol(DT)/.Machine$sizeof.pointer  # column name pointers,57,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:18,0.055,429.5,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,27,13,"names = ls(envir=env, all.names=TRUE)  # include """"hidden"""" objects (starting with .)","names = ls( all.names=TRUE,envir=env)  # include """"hidden"""" objects (starting with .)",83,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:15,0.0541666666666667,355.3046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,28,13,"obj = mget(names, envir=env)  # doesn't copy; mget is ok with ... unlike get, #5197","obj = mget(names, #5197
, envir=env)  # doesn't copy; mget is ok with ... unlike get",86,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:23,0.0563888888888889,732.875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,tables.R,28,13,"obj = mget(names, envir=env)  # doesn't copy; mget is ok with ... unlike get, #5197","obj = mget( envir=env,names)  # doesn't copy; mget is ok with ... unlike get, #5197",87,1 NOTE,0:0,NOTE:installed package size,9793908,00:03:23,0.0563888888888889,734.37109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,27,5,"env = new.env(parent=parent.env(.GlobalEnv))  # when user runs test.data.table() we don't want their variables in .GlobalEnv affecting tests, #3705","env = new.env( #3705
,parent=parent.env(.GlobalEnv))  # when user runs test.data.table() we don't want their variables in .GlobalEnv affecting tests",140,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:40,0.0611111111111111,1123.83203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,92,5,"encoding = """"UTF-8"""",  # just for tests 708-712 on Windows","encoding = """""""",  # just for tests 708-712 on Windows",299,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:54,0.0483333333333333,463.87109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,101,5,"warnPartialMatchArgs = base::getRversion()>=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865","warnPartialMatchArgs = base::getRversion()==""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865",308,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:03,0.0675,288.58203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,101,5,"warnPartialMatchArgs = base::getRversion()>=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865","warnPartialMatchArgs = base::getRversion()!=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865",309,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:03,0.0675,286.453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,101,5,"warnPartialMatchArgs = base::getRversion()>=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865","warnPartialMatchArgs = base::getRversion()<""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865",310,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:54,0.0483333333333333,407.640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,101,5,"warnPartialMatchArgs = base::getRversion()>=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865","warnPartialMatchArgs = base::getRversion()>""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865",311,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:59,0.0497222222222222,841.3125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,101,5,"warnPartialMatchArgs = base::getRversion()>=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865","warnPartialMatchArgs = base::getRversion()<=""""3.6.0"""", # ensure we don't rely on partial argument matching in internal code, #3664; >=3.6.0 for #3865",312,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:08,0.0688888888888889,747.29296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,104,5,"width = max(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width","width = max(getOption('width'), 0L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width",315,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:20,0.0722222222222222,747.30078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,104,5,"width = max(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width","width = max(getOption('width'), 1L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width",316,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:15,0.0541666666666667,375.2734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,104,5,"width = max(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width","width = max(getOption('width'), -1L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width",317,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:15,0.0541666666666667,357.83203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,104,5,"width = max(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width","width = max( 80L,getOption('width')), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width",319,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:56,0.0488888888888889,284.640625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,104,5,"width = max(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width","width = min(getOption('width'), 80L), # some tests (e.g. 1066, 1293) rely on capturing output that will be garbled with small width",321,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:02,0.0505555555555556,282.0703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,108,5,"cat(""""getDTthreads(verbose=TRUE):\n"""")         # for tracing on CRAN; output to log before anything is attempted","cat("""""""")         # for tracing on CRAN; output to log before anything is attempted",326,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:55,0.0486111111111111,284.94140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,110,5,"catf(""""test.data.table() running: %s\n"""", fn)  # print fn to log before attempting anything on it (in case it is missing); on same line for slightly easier grep","catf("""""""", fn)  # print fn to log before attempting anything on it (in case it is missing); on same line for slightly easier grep",331,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:15,0.0541666666666667,843.24609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,110,5,"catf(""""test.data.table() running: %s\n"""", fn)  # print fn to log before attempting anything on it (in case it is missing); on same line for slightly easier grep","catf( fn,""""test.data.table() running: %s\n"""")  # print fn to log before attempting anything on it (in case it is missing); on same line for slightly easier grep",332,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:15,0.0541666666666667,842.21484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,126,5,"assign(""""lasttime"""", proc.time()[3L], envir=env)  # used by test() to attribute time inbetween tests to the next test","assign(""""lasttime"""", proc.time()[1L], envir=env)  # used by test() to attribute time inbetween tests to the next test",397,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:55,0.0486111111111111,359.5625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,126,5,"assign(""""lasttime"""", proc.time()[3L], envir=env)  # used by test() to attribute time inbetween tests to the next test","assign(""""lasttime"""", envir=env, proc.time()[3L])  # used by test() to attribute time inbetween tests to the next test",402,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:51,0.0475,841.32421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=1.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",407,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:06,0.0516666666666667,283.69140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.1, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",408,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:19,0.0552777777777778,842.90234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=1L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",409,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:19,0.0552777777777778,841.8046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=1.0 ), envir=env)   # test timings aggregated to integer id",410,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:19,0.0552777777777778,733.75,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.1 ), envir=env)   # test timings aggregated to integer id",411,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:19,0.0552777777777778,842.01171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=-1.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",413,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:21,0.0558333333333333,732.95703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.-1, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",414,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:23,0.0563888888888889,733.54296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=-1L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",415,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:26,0.0572222222222222,732.29296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=-1.0 ), envir=env)   # test timings aggregated to integer id",416,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:26,0.0572222222222222,733.6796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.-1 ), envir=env)   # test timings aggregated to integer id",417,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:23,0.0563888888888889,1241.87890625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), nTest=0L, time=0.0, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",426,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:04,0.0511111111111111,284.65625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, RSS=0.0 , nTest=0L), envir=env)   # test timings aggregated to integer id",427,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:04,0.0511111111111111,285.09375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,127,5,"assign(""""timings"""", data.table( ID = seq_len(9999L), time=0.0, nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id","assign(""""timings"""", data.table( time=0.0, ID = seq_len(9999L), nTest=0L, RSS=0.0 ), envir=env)   # test timings aggregated to integer id",430,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:42,0.0616666666666667,290.44921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,160,5,"cat(""""\n"""", date(),   # so we can tell exactly when these tests ran on CRAN to double-check the result is up to date","cat("""""""", date(),   # so we can tell exactly when these tests ran on CRAN to double-check the result is up to date",491,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:09,0.0525,292.390625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,163,5,""""", longdouble.digits=="""", .Machine$longdouble.digits, # 64 normally, 53 for example under valgrind where some high accuracy tests need turning off, #4639",""""""""", .Machine$longdouble.digits, # 64 normally, 53 for example under valgrind where some high accuracy tests need turning off, #4639",498,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:04,0.0511111111111111,284.80078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,163,5,""""", longdouble.digits=="""", .Machine$longdouble.digits, # 64 normally, 53 for example under valgrind where some high accuracy tests need turning off, #4639",""""", .Machine$longdouble.digits, longdouble.digits=="""", # 64 normally, 53 for example under valgrind where some high accuracy tests need turning off, #4639",499,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:04,0.0511111111111111,284.74609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,163,5,""""", longdouble.digits=="""", .Machine$longdouble.digits, # 64 normally, 53 for example under valgrind where some high accuracy tests need turning off, #4639",""""", longdouble.digits=="""", # 64 normally, .Machine$longdouble.digits, 53 for example under valgrind where some high accuracy tests need turning off, #4639",500,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:57,0.0658333333333333,290.30078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) +1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",617,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:13,0.0536111111111111,340.55078125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -1L else TRUE][order(+time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",618,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:59,0.0663888888888889,726.875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) 1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",619,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:23,0.0730555555555556,842.0625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -1L else TRUE][order(time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",620,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:57,0.0658333333333333,294.515625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -0L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",621,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:06,0.0516666666666667,283.97265625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -1L else TRUE][order(-time)], 0L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",622,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:20,0.0555555555555556,362.14453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -1L else TRUE][order(-time)], 1L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",623,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:13,0.0536111111111111,284.3203125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) --1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",624,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:13,0.0536111111111111,284.1875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,197,5,"ans = head(timings[if (dev) -1L else TRUE][order(-time)], 10L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT","ans = head(timings[if (dev) -1L else TRUE][order(-time)], -1L)[,RSS:=NULL]   # exclude id 1 in dev as that includes JIT",625,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:13,0.0536111111111111,284.12109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) - if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1011,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:08,0.0522222222222222,315.69140625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) * if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1012,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:12,0.0533333333333333,357.82421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num<0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1014,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:20,0.0555555555555556,357.3046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num==0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1015,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:20,0.0555555555555556,339.11328125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>=0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1016,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:20,0.0555555555555556,357.2578125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num<=0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1017,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:24,0.0566666666666667,288.53125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num!=0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1018,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:24,0.0566666666666667,288.54296875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 0L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1019,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:24,0.0566666666666667,294.66796875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>1) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1020,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:01,0.0669444444444445,508.5859375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 1L, parent.frame(), inherits=TRUE)   # bump number of tests run",1021,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:10,0.0694444444444445,841.4921875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>-1) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1022,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:10,0.0694444444444445,841.65625,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) -1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1023,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:02,0.0505555555555556,290.5546875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else -1L, parent.frame(), inherits=TRUE)   # bump number of tests run",1024,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:23,0.0563888888888889,288.27734375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>(0+1)) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1025,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:23,0.0563888888888889,288.32421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>(0-1)) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run",1026,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:24,0.0733333333333333,508.74609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,274,12663,"assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, parent.frame(), inherits=TRUE)   # bump number of tests run","assign(""""ntest"""", get(""""ntest"""", parent.frame()) + if (num>0) 1L else 0L, inherits=TRUE, parent.frame())   # bump number of tests run",1032,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:20,0.0555555555555556,288.484375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,284,12662,took = proc.time()[3L]-lasttime  # so that prep time between tests is attributed to the following test,took = proc.time()[3L]+lasttime  # so that prep time between tests is attributed to the following test,1079,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:04,0.0677777777777778,459.82421875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,284,12662,took = proc.time()[3L]-lasttime  # so that prep time between tests is attributed to the following test,took = proc.time()[3L]*lasttime  # so that prep time between tests is attributed to the following test,1080,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:48,0.0466666666666667,825.45703125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,284,12662,took = proc.time()[3L]-lasttime  # so that prep time between tests is attributed to the following test,took = proc.time()[3L]/lasttime  # so that prep time between tests is attributed to the following test,1081,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:47,0.0463888888888889,829.89453125,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,284,12662,took = proc.time()[3L]-lasttime  # so that prep time between tests is attributed to the following test,took = proc.time()[1L]-lasttime  # so that prep time between tests is attributed to the following test,1083,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:53,0.0480555555555556,739.0234375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,293,12662,"assign(""""lasttime"""", proc.time()[3L], parent.frame(), inherits=TRUE)  # after gc() to exclude gc() time from next test when memtest","assign(""""lasttime"""", proc.time()[1L], parent.frame(), inherits=TRUE)  # after gc() to exclude gc() time from next test when memtest",1161,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:23,0.0563888888888889,339.1171875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,293,12662,"assign(""""lasttime"""", proc.time()[3L], parent.frame(), inherits=TRUE)  # after gc() to exclude gc() time from next test when memtest","assign(""""lasttime"""", proc.time()[3L], inherits=TRUE, parent.frame())  # after gc() to exclude gc() time from next test when memtest",1167,1 NOTE,0:0,NOTE:installed package size,9793943,00:04:07,0.0686111111111111,288.34375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,315,2111,"length(grep(x, y, fixed=TRUE)) ||  # try treating x as literal first; useful for most messages containing ()[]+ characters","length(grep(x, fixed=TRUE, y)) ||  # try treating x as literal first; useful for most messages containing ()[]+ characters",1212,1 NOTE,0:0,NOTE:installed package size,9793943,00:03:46,0.0627777777777778,355.3046875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,316,2111,"length(tryCatch(grep(x, y, ignore.case=ignore.case), error=function(e)NULL))  # otherwise try x as regexp","length(tryCatch(grep(x, ignore.case=ignore.case, y), error=function(e)NULL))  # otherwise try x as regexp",1217,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:57,0.0491666666666667,286.375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,388,690,"output = paste(output, collapse=""""\n"""")  # so that output= can be either a \n separated string, or a vector of strings.","output = paste( collapse=""""\n"""",output)  # so that output= can be either a \n separated string, or a vector of strings.",1472,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:34,0.0427777777777778,727.59375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,428,86,"if (identical(xc,yc) && identical(key(x),key(y))) return(invisible(TRUE))  # check key on original x and y because := above might have cleared it on xc or yc","if (identical(xc,yc) || identical(key(x),key(y))) return(invisible(TRUE))  # check key on original x and y because := above might have cleared it on xc or yc",1622,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:57,0.0491666666666667,914.37109375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,test.data.table.R,428,86,"if (identical(xc,yc) && identical(key(x),key(y))) return(invisible(TRUE))  # check key on original x and y because := above might have cleared it on xc or yc","if (identical(yc,xc) && identical(key(x),key(y))) return(invisible(TRUE))  # check key on original x and y because := above might have cleared it on xc or yc",1626,1 NOTE,0:0,NOTE:installed package size,9793943,00:02:54,0.0483333333333333,848.96875,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
data.table,timetaken.R,12,1207,tt = proc.time()-started.at  # diff all 3 times,tt = proc.time()/started.at  # diff all 3 times,75,1 NOTE,0:0,NOTE:installed package size,9793964,00:03:39,0.0608333333333333,429.49609375,COMPLETED,COMPLETED,COMPLETED,0:0,0:0,TRUE
