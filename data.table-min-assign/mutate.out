*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, c.rules, c_like.rules
SKIPPED 1 MUTANTS ONLY CHANGING STRING LITERALS
40 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 1: int setselfref(int x) {  ==>  int setselfref(int x) {
break;...INVALID 
PROCESSING MUTANT: 1: int setselfref(int x) {  ==>  int setselfref(int x) {
continue;...INVALID 
PROCESSING MUTANT: 1: int setselfref(int x) {  ==>  /*int setselfref(int x) {*/...INVALID 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x-1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.0.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x*1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.1.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x/1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.2.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x%1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.3.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<+, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.4.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<*, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.5.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key</, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.6.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<%, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.7.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key>-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.8.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key==-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.9.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<=-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.10.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key>=-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.11.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key!=-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.12.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.13.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+0;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.14.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+-1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.15.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+(1+1);                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.16.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+(1-1);                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc....VALID [written to ./data.table-min-assign.mutant.17.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.
  break;...INVALID 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.
  continue;...INVALID 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    return x+1;                         // to know if this data.table has been copied by key<-, names<-, attr<-, etc....VALID [written to ./data.table-min-assign.mutant.18.c] 
PROCESSING MUTANT: 2:   return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.  ==>    /*return x+1;                         // to know if this data.table has been copied by key<-, attr<-, names<-, etc.*/...VALID [written to ./data.table-min-assign.mutant.19.c] 
PROCESSING MUTANT: 3: }  ==>  }
break;...INVALID 
PROCESSING MUTANT: 3: }  ==>  }
continue;...INVALID 
PROCESSING MUTANT: 4: int main(void){  ==>  int main(void){
break;...INVALID 
PROCESSING MUTANT: 4: int main(void){  ==>  int main(void){
continue;...INVALID 
PROCESSING MUTANT: 4: int main(void){  ==>  /*int main(void){*/...INVALID 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref(0);...VALID [written to ./data.table-min-assign.mutant.20.c] 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref(1);...VALID [written to ./data.table-min-assign.mutant.21.c] 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref(-1);...VALID [written to ./data.table-min-assign.mutant.22.c] 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref((5+1));...VALID [written to ./data.table-min-assign.mutant.23.c] 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref((5-1));...VALID [written to ./data.table-min-assign.mutant.24.c] 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref(5);
  break;...INVALID 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    return setselfref(5);
  continue;...INVALID 
PROCESSING MUTANT: 5:   return setselfref(5);  ==>    /*return setselfref(5);*/...VALID [written to ./data.table-min-assign.mutant.25.c] 
PROCESSING MUTANT: 6: }  ==>  }
break;...INVALID 
PROCESSING MUTANT: 6: }  ==>  }
continue;...INVALID 
26 VALID MUTANTS
14 INVALID MUTANTS
0 REDUNDANT MUTANTS
Valid Percentage: 65.0%
